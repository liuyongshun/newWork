一、
git config --global user.name "Your Name"  //双引号内是你的github用户名
git config --global user.email "email@example.com"  //双引号内是你的注册邮箱
二、
ssh-keygen -t rsa -C "注册邮箱"   //获取ssh密钥
ssh -T git@github.com  //查看连接状态
start ~/.ssh/id_rsa.pub  // 获取key，打开.ssh下的id_rsa.pub文件，里面的是key的内容。
三、
登录github打开github。找到setting------ SSH keys----- ADD SSH key  写好title。将SSH（这是公共的密匙id_rsa.pub.不要放私有的密匙id_rsa.）内容添加到key里面。
ssh -T git@github.com   // 测试连接成功
四、
 git init  初始化本地仓库
git remote add origin git@github.com:githubusername（github的用户名）/remotename(远程库的名字）.git
git remote -v  // 查看远程库
五、
git push -u origin master  // 推送master分支的所有内容，第一次使用加上了-u参数，是推送内容并关联分支。
（四五步骤可以合并一个克隆的方式git clone git@github.com:githubusername（github的用户名）/remotename(远程库的名字）.git）



命令：
git status  //当你修改txt文本后，查看状态。
git diff readme.txt   //diff (difference),该方式只能比较未提交（add）的。
git log & git log --pretty=oneline  从下往上，最上边是最进一次改动。（日志）
git reset --hard HEAD^
HEAD is now at ea34578 add distributed
//Git必须知道当前版本是哪个版本，用HEAD表示当前版本，上一个版本就是HEAD^，上上一个版本就是HEAD^^，100个写成HEAD~100。我们要把当前版本“append GPL”回退到上一个版本“add distributed”。
git reset --hard id（前6位就差不多）// 通过id查找版本。
git reflog  //如果关掉了电脑。之后又想改回去。git reflog用来记录你的每一次命令。

分支：（该方式在本地进行分支，github上不会产生分支）在分支上提交不会影响主分支，只有合并后分支的提交才会到主分支上，合并后次分支可以删除。
查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>

创建+切换分支：git checkout -b <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>

git log --graph 分支合并图

git branch --all 产看所有分支