ST3: package Control

package Control官网复制ST3的代码 ― 打开ST3的console ― 粘贴 ―完成后重启 ― Ctrl+Shift+P ― 输入PC（即：package control）


插件：（安装通过： Ctrl+Shift+P ― 输入PC ― 插件名）

-color hightlighter : 颜色高亮（css颜色提示很好用）

-emmet： html的自动补全。 ctrl + e（禁用了element的tab补全）自动补全css兼容性内容（同autoPrefixer类似）。

-ConvertToUTF8：

-sublime Linter： eslint需要。

-SublimeLinter-contrib-eslint ;   eslint需要。

-eslint：

-jsformat： js格式化。
-css format： css格式化

AutoPrefixer 插件，它可以自动补全浏览器私有属性前缀，兼容性数据从著名的 can I use 读取。(Node.js依赖)

设置：1、Preferences>package setting>AutoPrefixer>Setting-User 
（如果不能用去掉Preferences>package setting>AutoPrefixer>Defaults-User下的"prefixOnSave": false）
{
    "browsers": ["last 7 versions"],
    "cascade": true,
    "remove": true
}
或
{
    "browsers": ["last 2 versions","last 2 Chrome versions",">5%","Firefox >= 20","ie 6-8","iOS 7"]
}
2、绑定快捷键，随你喜欢（    { "keys": ["ctrl+alt+shift+p"], "command": "autoprefixer" } ）

-expand_region ：向外扩展，范围选择

设置： 
绑定快捷键：
[
    { "keys": ["ctrl+shift+space"], "command": "expand_region" },
    {
      "keys": ["ctrl+space"],
      "command": "expand_region",
      "args": {"undo": true},
      "context": [{ "key": "expand_region_soft_undo" }]
    }
]




- sass: sass高亮提示

- sublimecodeintel ： js补全功能

设置：进入：Perferences->Package Settings->SublimeCodeIntel->Setting - Defalut
把 "codeintel_selected_catalogs": ["jQuery"] 修改为 "codeintel_selected_catalogs": ["JavaScript"]


快捷键：

1、 垂直选择： 滚轮中键按住滚动 或按住shift + 右键 +滚动滚轮  或  ctrl + alt +down/up


2、进行自适应缩进的粘贴:  Ctrl-Shift-v) 

3、
选择同一变量（但是选择css和html时就不会正确检查变量了。）：

第一次ctrl + d 。先标记同名变量，在按会选中第一，再按选中第二个，当你不想选择第二个时，按一下ctrl+k（没变化），在按ctrl+d就放弃了这第二个，选中了第三个。

例：放到第一个i后面按下ctrl + d，只会选择变量i，而不会选择list的i。
    for (var i; i < 10; i ++) {
        var list = 2;
        console.log(list);
        console.log(i);
    }

4、自动选取所有同名同类（不只是变量。）：ａｌｔ + f3

不止选取变量i还选取其他的i。


5、ctrl + shift + a : 选择子类和后代标签所有内容（针对html）。


6、ctrl +　ｐ 预览文件

7. ctrl + shift + p  输入set syntax: 设置语法，可以缩写为ss：

8、 Ctrl-Shift-' 选择同个标签的开始和结尾，方便标签的变更。

9、ctrl+g 跳转行

10、ctrl+shift+up/down 整行移动

有时候我们要用 Sublime Text 的文件检索功能找到特定的文件，如果项目目录下面有 node_modules、bower_components 之类的文件夹则会影响输出结果。

"folder_exclude_patterns":
 [
	".svn",
	".git",
	".hg",
	"CVS",
	"node_modules",
	"bower_components"
]

基础用户设置：



"trim_trailing_white_space_on_save": true,  自动移除行尾多余空格
"ensure_newline_at_eof_on_save": true,  文件末尾自动保留一个空行
"font_face": "Microsoft YaHei Mono",   是一款混合字体
"disable_tab_abbreviations": true, 禁用 Emmet 的 tab 键功能（请使用 ctrl+e）
"translate_tabs_to_spaces": true, 代码 tab 对齐转换为空格对齐
"tab_size": 2,  缩进距离2个空格
"draw_minimap_border": true,  用于右侧代码预览时给所在区域加上边框，方便识别
"save_on_focus_lost": true,  窗口失焦立即保存文件
"highlight_line": true,   当前行高亮。word_wrap
"word_wrap": "true",   设置自动换行
"fade_fold_buttons": false,   默认显示行号右侧的代码段闭合展开三角号
"bold_folder_labels": true,  侧边栏文件夹显示加粗，区别于文件
"highlight_modified_tabs": true,  高亮未保存文件。
"default_line_ending": "unix",  使用 unix 风格的换行符
"auto_find_in_selection": true  开启选中范围内搜索（而不是整个文档


我的用户设置：
{
    "auto_find_in_selection": true,
    "color_scheme": "Packages/User/SublimeLinter/Monokai (SL).tmTheme",
    "disable_tab_abbreviations": true,
    "draw_minimap_border": true,
    "expand_tabs_on_save": true,
     "font_face": "Microsoft YaHei Mono",
    "draw_white_space": "all" ,
    "font_size": 14,
    "highlight_line": true,
    "highlight_modified_tabs": true,
    "ignored_packages":
    [
        "Vintage"
    ],
    "tab_size": 4,
    "translate_tabs_to_spaces": true,
    "trim_trailing_white_space_on_save": true,
    "word_separators": "./\\()\"':,.;<>~!@#$%^&*|+=[]{}`~?"
}

去掉了中线，有的类名用的中线，便于选择
